name: Basic 3-Tier App
version: 0.0.2
options:
  blueprintoptionsgitsync: true
  blueprintOptionGitDelete: false
inputs:
  cloud:
    type: string
    enum:
    - aws
    - sddc
    default: sddc
    title: Select Environment for Deployment
    description: Target Environment
  stage:
    type: string
    enum:
    - dev
    - prod
    default: prod
    title: Select the lifecycle Stage
    description: LifeCycle Stage
  username:
    type: string
    title: Admin Username
    default: admin
    description: The username you would like to have for the installation.
  password:
    type: string
    pattern: '[a-z0-9A-Z@#$]+'
    encrypted: true
    title: Admin Password
    default: VMware1!
    description: The password you would like to use for the admin account.
  quantity-web:
    type: integer
    title: Web Instances
    default: 0
    description: How many WEB instances (0-8)?
  quantity-app:
    type: integer
    title: App Instances
    default: 0
    description: How many APP instances (0-8)?
  quantity-db:
    type: integer
    title: DB Instances
    default: 0
    description: How many DB instances (0-3)?
resources:
  tier-app:
    type: Cloud.Machine
    metadata:
      layoutPosition:
      - 0
      - 0
    properties:
      flavor: small
      image: ubuntu1804-cloudimg
      count: ${input.quantity-app}
      cloudConfig: "repo_update: true\nrepo_upgrade: all\napt_source:\n  - source:\
        \ deb http://archive.ubuntu.com/ubuntu main universe multiverse restricted\n\
        \      \npackages:\n  - unzip\n  \nusers:\n  - name: ${input.username}\n \
        \   sudo: ['ALL=(ALL) NOPASSWD:ALL']\n    groups: sudo\n    shell: /bin/bash\n\
        \    \nruncmd:\n  - USER=${input.username}\n  - PASS=${input.password}\n \
        \ - echo ${input.username}:${input.password} | /usr/sbin/chpasswd\n  - sed\
        \ -i \"s/PasswordAuthentication no/PasswordAuthentication yes/g\" /etc/ssh/sshd_config\n\
        \  - service ssh reload\n  - echo \"${input.username} ALL=(ALL) NOPASSWD:ALL\"\
        \ >> /etc/sudoers\n  - echo 'Cloud-init is done!' >> /tmp/finished.txt\n"
      constraints:
      - tag: cloud:${input.cloud}
      networks:
      - network: ${resource.appnet.id}
  tier-web:
    type: Cloud.Machine
    metadata:
      layoutPosition:
      - 0
      - 1
    properties:
      flavor: small
      image: ubuntu1804-cloudimg
      count: ${input.quantity-web}
      cloudConfig: "repo_update: true\nrepo_upgrade: all\napt_source:\n  - source:\
        \ deb http://archive.ubuntu.com/ubuntu main universe multiverse restricted\n\
        \      \npackages:\n  - unzip\n  \nusers:\n  - name: ${input.username}\n \
        \   sudo: ['ALL=(ALL) NOPASSWD:ALL']\n    groups: sudo\n    shell: /bin/bash\n\
        \    \nruncmd:\n  - USER=${input.username}\n  - PASS=${input.password}\n \
        \ - echo ${input.username}:${input.password} | /usr/sbin/chpasswd\n  - sed\
        \ -i \"s/PasswordAuthentication no/PasswordAuthentication yes/g\" /etc/ssh/sshd_config\n\
        \  - service ssh reload\n  - echo \"${input.username} ALL=(ALL) NOPASSWD:ALL\"\
        \ >> /etc/sudoers\n  - echo 'Cloud-init is done!' >> /tmp/finished.txt\n"
      constraints:
      - tag: cloud:${input.cloud}
      networks:
      - network: ${resource.appnet.id}
  tier-db:
    type: Cloud.Machine
    metadata:
      layoutPosition:
      - 0
      - 2
    properties:
      flavor: small
      image: ubuntu1804-cloudimg
      count: ${input.quantity-db}
      cloudConfig: "repo_update: true\nrepo_upgrade: all\napt_source:\n  - source:\
        \ deb http://archive.ubuntu.com/ubuntu main universe multiverse restricted\n\
        \      \npackages:\n  - unzip\n  \nusers:\n  - name: ${input.username}\n \
        \   sudo: ['ALL=(ALL) NOPASSWD:ALL']\n    groups: sudo\n    shell: /bin/bash\n\
        \    \nruncmd:\n  - USER=${input.username}\n  - PASS=${input.password}\n \
        \ - echo ${input.username}:${input.password} | /usr/sbin/chpasswd\n  - sed\
        \ -i \"s/PasswordAuthentication no/PasswordAuthentication yes/g\" /etc/ssh/sshd_config\n\
        \  - service ssh reload\n  - echo \"${input.username} ALL=(ALL) NOPASSWD:ALL\"\
        \ >> /etc/sudoers\n  - echo 'Cloud-init is done!' >> /tmp/finished.txt\n"
      constraints:
      - tag: cloud:${input.cloud}
      networks:
      - network: ${resource.appnet.id}
  appnet:
    type: Cloud.Network
    metadata:
      layoutPosition:
      - 1
      - 0
    properties:
      networkType: existing
